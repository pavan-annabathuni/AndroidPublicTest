name: Outgrow CD Pipeline Action

on:
  push:
    branches: [ "development", "staging","main" ]
jobs:
  tagging_releases_dev:
    if: github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    outputs:
      new_tag_version: ${{ steps.new_tag_builder.outputs.new_tag }}
    name: üßøTagging & Release Application
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: ‚¨áÔ∏è Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: '0'
      - name: üîñ Tag version Alpha / Beta
        id: tag_version
        uses: anothrNick/github-tag-action@master
        env:
          DEFAULT_BUMP: patch
          GITHUB_TOKEN: ${{ secrets.ACTION_SECRET }}
          WITH_V: false
          RELEASE_BRANCHES: main
          PRERELEASE: true
          PRERELEASE_SUFFIX: "alpha"
      - name: üîÉ Building Version Output
        id: new_tag_builder
        run: echo "new_tag=${{ steps.tag_version.outputs.new_tag }}" >> $GITHUB_OUTPUT
      - name: üõéÔ∏è Create a GitHub release
        uses: release-drafter/release-drafter@master
        with:
          version: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          tag: ${{ steps.tag_version.outputs.new_tag }}
          publish: true
          if: github.ref == 'refs/heads/development' || github.ref == 'refs/heads/qa' || github.ref == 'refs/heads/staging'
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.ACTION_SECRET }}
  dev_deployment:
    if: github.ref == 'refs/heads/development'
    needs: [ tagging_releases_dev ]
    environment: development
    runs-on: ubuntu-latest
    steps:
      - name: code checkout
        uses: actions/checkout@v3
      - name: Touch local properties
        run: touch local.properties
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Bump version
        uses: chkfung/android-version-actions@v1.2.1
        with:
          gradlePath: app/build.gradle
          versionCode: ${{github.run_number}}
          versionName: ${{needs.tagging_releases_dev.outputs.new_tag_version}}

      - name: Assemble Release
        run: ./gradlew assembleQADebug
      - name: Sign Release
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/QA/debug
          signingKeyBase64: ${{ secrets.OUTGROW_APP_SIGNING_KEY }}
          alias: ${{ secrets.OUTGROW_APP_ALIAS }}
          keyStorePassword: ${{ secrets.OUTGROW_APP_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.OUTGROW_APP_KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "33.0.1"
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: app
          path: app/build/outputs/apk/QA/debug
      - name: download artifact
        uses: actions/download-artifact@v2
        with:
          name: app
      - name: list files
        run: ls -l
      - name: upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.OUTGROW_APP_FIREBASE_APP_ID_QA}}
          serviceCredentialsFileContent: ${{ secrets.OUTGROW_APP_PRIVATE_KEY }}
          groups: testers
          file: app-QA-debug-signed.apk

  tagging_releases_staging:
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    outputs:
      new_tag_version: ${{ steps.new_tag_builder.outputs.new_tag }}
    name: üßøTagging & Release Application
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: ‚¨áÔ∏è Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: '0'
      - name: üîñ Tag version Alpha / Beta
        id: tag_version
        uses: anothrNick/github-tag-action@master
        env:
          DEFAULT_BUMP: patch
          GITHUB_TOKEN: ${{ secrets.ACTION_SECRET }}
          WITH_V: false
          RELEASE_BRANCHES: main
          PRERELEASE: true
          PRERELEASE_SUFFIX: "beta"
      - name: üîÉ Building Version Output
        id: new_tag_builder
        run: echo "new_tag=${{ steps.tag_version.outputs.new_tag }}" >> $GITHUB_OUTPUT
      - name: üõéÔ∏è Create a GitHub release
        uses: release-drafter/release-drafter@master
        with:
          version: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          tag: ${{ steps.tag_version.outputs.new_tag }}
          publish: true
          if: github.ref == 'refs/heads/development' || github.ref == 'refs/heads/qa' || github.ref == 'refs/heads/staging'
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.ACTION_SECRET }}
  staging_deployment:
    if: github.ref == 'refs/heads/staging'
    needs: [ tagging_releases_staging ]
    runs-on: ubuntu-latest
    steps:
      - name: code checkout
        uses: actions/checkout@v3
      - name: Touch local properties
        run: touch local.properties
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Bump version
        uses: chkfung/android-version-actions@v1.2.1
        with:
          gradlePath: app/build.gradle
          versionCode: ${{github.run_number}}
          versionName: ${{needs.tagging_releases_staging.outputs.new_tag_version}}

      - name: Assemble Release
        run: ./gradlew assembleStagingDebug
      - name: Sign Release
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/Staging/debug
          signingKeyBase64: ${{ secrets.OUTGROW_APP_SIGNING_KEY }}
          alias: ${{ secrets.OUTGROW_APP_ALIAS }}
          keyStorePassword: ${{ secrets.OUTGROW_APP_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.OUTGROW_APP_KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "33.0.1"
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: app
          path: app/build/outputs/apk/Staging/debug
      - name: download artifact
        uses: actions/download-artifact@v2
        with:
          name: app
      - name: list files
        run: ls -l
      - name: upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.OUTGROW_APP_FIREBASE_APP_ID_STAGING}}
          serviceCredentialsFileContent: ${{ secrets.OUTGROW_APP_PRIVATE_KEY }}
          groups: testers
          file: app-Staging-debug-signed.apk

  tagging_releases_main:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    outputs:
      new_tag_version: ${{ steps.new_tag_builder.outputs.new_tag }}
    name: üßøTagging & Release Application
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: ‚¨áÔ∏è Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: '0'
      - name: üîñ Tag version
        id: tag_version
        uses: anothrNick/github-tag-action@master
        env:
          DEFAULT_BUMP: patch
          GITHUB_TOKEN: ${{ secrets.ACTION_SECRET }}
          WITH_V: false
          RELEASE_BRANCHES: main
          PRERELEASE: false
      - name: üîÉ Building Version Output
        id: new_tag_builder
        run: echo "new_tag=${{ steps.tag_version.outputs.new_tag }}" >> $GITHUB_OUTPUT
      - name: üõéÔ∏è Create a GitHub release
        uses: release-drafter/release-drafter@master
        with:
          version: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          tag: ${{ steps.tag_version.outputs.new_tag }}
          publish: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.ACTION_SECRET }}

  main_deployment:
    if: github.ref == 'refs/heads/main'
    needs: [ tagging_releases_main ]
    runs-on: ubuntu-latest
    steps:
      - name: code checkout
        uses: actions/checkout@v3
      - name: Touch local properties
        run: touch local.properties
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Bump version
        uses: chkfung/android-version-actions@v1.2.1
        with:
          gradlePath: app/build.gradle
          versionCode: ${{github.run_number}}
          versionName: ${{needs.tagging_releases_staging.outputs.new_tag_version}}

      - name: Assemble Release
        run: ./gradlew bundleProductionRelease
      - name: Sign Release
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/bundle/ProductionRelease
          signingKeyBase64: ${{ secrets.OUTGROW_APP_SIGNING_KEY }}
          alias: ${{ secrets.OUTGROW_APP_ALIAS }}
          keyStorePassword: ${{ secrets.OUTGROW_APP_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.OUTGROW_APP_KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "33.0.1"
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: app
          path: app/build/outputs/bundle/ProductionRelease
      - name: download artifact
        uses: actions/download-artifact@v2
        with:
          name: app
      - name: list files
        run: ls -l
      - name: Upload Android Release to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_SERVICE_ACCOUNT_JSON }}
          packageName: com.waycool.iwap
          releaseFiles: app-Production-debug-signed.aab
          track: beta
          inAppUpdatePriority: 5
          userFraction: 1.0
#          whatsNewDirectory: distribution/whatsnew
#          mappingFile: app/build/outputs/mapping/release/mapping.txt
#          debugSymbols: app/intermediates/merged_native_libs/release/out/lib
#          file: app-Production-debug-signed.aab